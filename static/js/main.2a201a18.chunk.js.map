{"version":3,"sources":["assets/images/background sync /^/.//.*$","assets/images/background/C-3PO.png","assets/images/background/R5-D4.webp","assets/images/background/beru.jpeg","assets/images/background/biggs.jpeg","assets/images/background/darth-vader.png","assets/images/background/default.png","assets/images/background/leia.png","assets/images/background/luke.png","assets/images/background/main-bg.jpg","assets/images/background/obi_wan_kenobi.png","assets/images/background/owen.jpg","assets/images/background/r2d2.png","constants/cards-enum.js","constants/detailed-card-enum.js","constants/tabs-enum.js","components/card/card.js","components/info-panel/info-panel.js","api/api.js","constants/request-params.js","pages/episodes/episodes.js","components/detailed-card/utils/getImgLink.js","components/detailed-card/detailed-card.js","components/detailed-card/utils/getCardItemProps.js","pages/characters/characters.js","pages/planets/planets.js","components/starship-card/starship-card.js","pages/starship/starship.js","contexts/CurrentTabContext.js","components/menu/menu.js","assets/images/icons/star-wars.svg","components/logo/logo.js","components/header/header.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","CardsEnum","DetailedCardEnum","TabsEnum","Card","type","card","onClick","releaseDate","description","title","episode","useState","detailsVisibility","setDetailsVisibility","handleOnClick","handleMouseEvent","className","dateTime","onMouseEnter","onMouseLeave","href","preventDefault","InfoPanel","currentFilm","properties","episode_id","opening_crawl","release_date","director","producer","api","baseUrl","headers","this","_methods","GET","POST","DELETE","PUT","PATCH","method","path","options","fetch","body","JSON","stringify","then","res","ok","json","Promise","reject","status","_fetchHandle","Episodes","films","setFilms","setCurrentFilm","useEffect","getFilmsList","data","result","catch","err","console","error","selectedFilm","find","film","_id","characterPicPath","default","TableRow","label","value","DetailedCard","currentCardItem","cardItem","props","height","mass","eyeColor","eye_color","birthYear","birth_year","name","diameter","rotationPeriod","rotation_period","orbitalPeriod","orbital_period","gravity","population","climate","terrain","surfaceWater","surface_water","getCardItemProps","image","characterItemName","imageName","undefined","require","getImgLink","characters","planets","character","index","src","alt","Characters","setCharacters","currentCharacter","setCurrentCharacter","getCharactersList","results","getCharacterById","uid","Planets","setPlanets","currentPlanet","setCurrentPlanet","getPlanetList","getPlanetById","planet","Paragraph","StarshipCard","starshipCards","starship_class","manufacturer","cost_in_credits","crew","passengers","max_atmosphering_speed","hyperdrive_rating","MGLT","cargo_capacity","consumables","starshipCard","Starship","starship","setStarship","currentStarship","setCurrentStarship","getStarshipList","getStarshipById","CurrentTabContext","createContext","currentTab","setCurrentTab","Menu","links","tab","useContext","handleLinkClick","target","link","Logo","logo","width","Header","App","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a201a18.chunk.js","sourcesContent":["var map = {\n\t\"./C-3PO.png\": 17,\n\t\"./R5-D4.webp\": 18,\n\t\"./beru.jpeg\": 19,\n\t\"./biggs.jpeg\": 20,\n\t\"./darth-vader.png\": 21,\n\t\"./default.png\": 22,\n\t\"./leia.png\": 23,\n\t\"./luke.png\": 24,\n\t\"./main-bg.jpg\": 25,\n\t\"./obi_wan_kenobi.png\": 26,\n\t\"./owen.jpg\": 27,\n\t\"./r2d2.png\": 28\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 16;","export default __webpack_public_path__ + \"static/media/C-3PO.22ccf25d.png\";","export default __webpack_public_path__ + \"static/media/R5-D4.9d6d1406.webp\";","export default __webpack_public_path__ + \"static/media/beru.974186e8.jpeg\";","export default __webpack_public_path__ + \"static/media/biggs.b9ed9120.jpeg\";","export default __webpack_public_path__ + \"static/media/darth-vader.d60b18f7.png\";","export default __webpack_public_path__ + \"static/media/default.5f1cab10.png\";","export default __webpack_public_path__ + \"static/media/leia.e87cf1ef.png\";","export default __webpack_public_path__ + \"static/media/luke.346df4e7.png\";","export default __webpack_public_path__ + \"static/media/main-bg.52d85586.jpg\";","export default __webpack_public_path__ + \"static/media/obi_wan_kenobi.75de10a4.png\";","export default __webpack_public_path__ + \"static/media/owen.278884fa.jpg\";","export default __webpack_public_path__ + \"static/media/r2d2.3dcfc63d.png\";","export const CardsEnum = {\n  MOVIE: 'MOVIE',\n  CHARACTERS: 'CHARACTERS'\n};\n","export const DetailedCardEnum = {\n  PLANETS: 'PLANETS',\n  CHARACTERS: 'CHARACTERS'\n};\n","export const TabsEnum = {\n  EPISODES: 'EPISODES',\n  CHARACTERS: 'CHARACTERS',\n  STARSHIP: 'STARSHIP',\n  PLANETS: 'PLANETS'\n};\n","import React, { useState } from 'react';\n\nimport { CardsEnum } from '../../constants';\n\nimport './card.css';\n\nexport const Card = ({ type, card, onClick }) => {\n  const { id, releaseDate, description, title, episode } = card;\n  const [detailsVisibility, setDetailsVisibility] = useState(false);\n\n  const handleOnClick = () => {\n    onClick(id);\n  };\n\n  const handleLinkClick = (e) => {\n    e.preventDefault();\n  };\n\n  const handleMouseEvent = () => {\n    setDetailsVisibility(!detailsVisibility);\n  };\n\n  return type === CardsEnum.MOVIE ? (\n    <div className=\"card-item\" onClick={handleOnClick}>\n      <time className=\"card-year content\" dateTime={releaseDate}>\n        {releaseDate}\n      </time>\n      <p className=\"card-name content\">\n        {title}. Episode {episode}\n      </p>\n      <p className=\"card-description content\">{description}</p>\n    </div>\n  ) : (\n    <div\n      className=\"card-item card-characters\"\n      onClick={handleOnClick}\n      onMouseEnter={handleMouseEvent}\n      onMouseLeave={handleMouseEvent}\n    >\n      <time className=\"card-year content\" dateTime={releaseDate}>\n        {releaseDate}\n      </time>\n      <p className=\"card-name character content\">{description}</p>\n      {detailsVisibility && (\n        <a className=\"card-link content\" href=\".\" onClick={handleLinkClick}>\n          View details\n        </a>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './info-panel.css';\n\nexport const InfoPanel = ({ currentFilm }) => {\n  if (currentFilm) {\n    return (\n      <>\n        <section className=\"episode\">\n          <h1 className=\"episode-number\">Episode {currentFilm.properties.episode_id}</h1>\n          <h2 className=\"episode-title\">{currentFilm.properties.title}</h2>\n          <p className=\"episode-description\">{currentFilm.properties.opening_crawl}</p>\n        </section>\n        <section className=\"date\">\n          <h2 className=\"date-title\">Release date</h2>\n          <p className=\"date-description\">{currentFilm.properties.release_date}</p>\n        </section>\n        <section className=\"info\">\n          <p className=\"info-title\">Director: {currentFilm.properties.director}</p>\n          <p className=\"info-title\">Producer: {currentFilm.properties.producer}</p>\n        </section>\n        <h2 className=\"title\">See details about other episodes</h2>\n      </>\n    );\n  }\n  return <h2 className=\"episode-select\">Select the episode</h2>;\n};\n","import { requestParams } from '../constants';\n\nclass Api {\n  constructor({ baseUrl, headers }) {\n    this.baseUrl = baseUrl;\n    this.headers = headers;\n    this._methods = {\n      GET: 'GET',\n      POST: 'POST',\n      DELETE: 'DELETE',\n      PUT: 'PUT',\n      PATCH: 'PATCH'\n    };\n  }\n\n  _fetchHandle(method, path, options) {\n    return fetch(`${this.baseUrl}${path}`, {\n      method,\n      headers: this.headers,\n      body: JSON.stringify(options)\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Error: ${res.status}`);\n    });\n  }\n\n  getFilmsList() {\n    return this._fetchHandle(this._methods.GET, '/films');\n  }\n\n  getCharactersList() {\n    return this._fetchHandle(this._methods.GET, '/people');\n  }\n\n  getCharacterById(id) {\n    return this._fetchHandle(this._methods.GET, `/people/${id}`);\n  }\n\n  getStarshipList() {\n    return this._fetchHandle(this._methods.GET, '/starships');\n  }\n\n  getStarshipById(id) {\n    return this._fetchHandle(this._methods.GET, `/starships/${id}`);\n  }\n\n  getPlanetList() {\n    return this._fetchHandle(this._methods.GET, '/planets');\n  }\n\n  getPlanetById(id) {\n    return this._fetchHandle(this._methods.GET, `/planets/${id}`);\n  }\n}\n\nexport const api = new Api(requestParams);\n","export const requestParams = {\n  baseUrl: 'https://www.swapi.tech/api/',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n","import React, { useEffect, useState } from 'react';\n\nimport { Card } from '../../components/card';\nimport { InfoPanel } from '../../components/info-panel/info-panel';\nimport { CardsEnum } from '../../constants';\nimport { api } from '../../api';\n\nimport './episodes.css';\n\nexport const Episodes = () => {\n  const [films, setFilms] = useState(null);\n  const [currentFilm, setCurrentFilm] = useState(null);\n\n  useEffect(() => {\n    api\n      .getFilmsList()\n      .then((data) => {\n        setFilms(data.result);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  const handleOnClick = (id) => {\n    const selectedFilm = films.find((film) => film._id === id);\n    setCurrentFilm(selectedFilm);\n  };\n\n  return (\n    <>\n      <InfoPanel currentFilm={currentFilm} />\n      <article className=\"card\">\n        {films\n          ? films.map((film) => {\n              return (\n                <Card\n                  key={film._id}\n                  type={CardsEnum.MOVIE}\n                  card={{\n                    id: film._id,\n                    releaseDate: film.properties.release_date,\n                    description: film.properties.opening_crawl,\n                    title: film.properties.title,\n                    episode: film.properties.episode_id\n                  }}\n                  onClick={handleOnClick}\n                />\n              );\n            })\n          : 'Loading...'}\n      </article>\n    </>\n  );\n};\n","const characterPicPath = {\n  'Luke Skywalker': 'luke.png',\n  'C-3PO': 'C-3PO.png',\n  'R2-D2': 'r2d2.png',\n  'Darth Vader': 'darth-vader.png',\n  'Leia Organa': 'leia.png',\n  'Owen Lars': 'owen.jpg',\n  'Beru Whitesun lars': 'beru.jpeg',\n  'R5-D4': 'R5-D4.webp',\n  'Biggs Darklighter': 'biggs.jpeg',\n  'Obi-Wan Kenobi': 'obi_wan_kenobi.png',\n  default: 'default.png'\n};\n\nexport const getImgLink = (characterItemName) => {\n  const imageName =\n    characterPicPath[characterItemName] === '' ||\n    characterPicPath[characterItemName] === undefined\n      ? characterPicPath.default\n      : characterPicPath[characterItemName];\n  return require(`../../../assets/images/background/${imageName}`);\n};\n","import React from 'react';\n\nimport { DetailedCardEnum } from '../../constants';\nimport { getCardItemProps, getImgLink } from './utils';\n\nimport './detailed-card.css';\n\nconst TableRow = ({ label, value }) => {\n  return (\n    <tr>\n      <td className=\"character-row\">{label}</td>\n      <td className=\"character-row\">{value}</td>\n    </tr>\n  );\n};\n\nexport const DetailedCard = ({ currentCardItem, type }) => {\n  const cardItem = getCardItemProps(currentCardItem, type);\n  const image = getImgLink(cardItem.name);\n\n  const characters = [\n    { label: 'Height', value: cardItem.height },\n    { label: 'Mass', value: cardItem.mass },\n    { label: 'Eye color', value: cardItem.eyeColor },\n    { label: 'Birth year', value: cardItem.birthYear }\n  ];\n\n  const planets = [\n    { label: 'Diameter', value: cardItem.diameter },\n    { label: 'Rotation period', value: cardItem.rotationPeriod },\n    { label: 'Orbital period', value: cardItem.orbitalPeriod },\n    { label: 'Gravity', value: cardItem.gravity },\n    { label: 'Population', value: cardItem.population },\n    { label: 'Climate', value: cardItem.climate },\n    { label: 'Terrain', value: cardItem.terrain },\n    { label: 'Surface water', value: cardItem.surfaceWater }\n  ];\n\n  return type === DetailedCardEnum.CHARACTERS ? (\n    <div className=\"character-card\">\n      <h2 className=\"character-card-title\">Info about {cardItem.name}</h2>\n      <div className=\"character-table-grid\">\n        <table className=\"character-table\">\n          <tbody>\n            {characters.map((character, index) => (\n              <TableRow\n                key={`table_row_characters_${index}`}\n                label={character.label}\n                value={character.value}\n              />\n            ))}\n          </tbody>\n        </table>\n        <img className=\"character-table-image\" src={image.default} alt={cardItem.name} />\n      </div>\n    </div>\n  ) : (\n    <div className=\"character-card\">\n      <h2 className=\"character-card-title\">Info about {cardItem.name}</h2>\n      <table className=\"character-table\">\n        <tbody>\n          {planets.map((character, index) => (\n            <TableRow\n              key={`table_row_planets_${index}`}\n              label={character.label}\n              value={character.value}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import { DetailedCardEnum } from '../../../constants';\n\nexport const getCardItemProps = (props, type) => {\n  return type === DetailedCardEnum.CHARACTERS\n    ? {\n        height: props.height,\n        mass: props.mass,\n        eyeColor: props.eye_color,\n        birthYear: props.birth_year,\n        name: props.name\n      }\n    : {\n        diameter: props.diameter,\n        rotationPeriod: props.rotation_period,\n        orbitalPeriod: props.orbital_period,\n        gravity: props.gravity,\n        population: props.population,\n        climate: props.climate,\n        terrain: props.terrain,\n        surfaceWater: props.surface_water,\n        name: props.name\n      };\n};\n","import React, { useEffect, useState } from 'react';\n\nimport { Card } from '../../components/card';\nimport { DetailedCard } from '../../components/detailed-card';\nimport { api } from '../../api';\nimport { CardsEnum, DetailedCardEnum } from '../../constants';\n\nimport './characters.css';\n\nexport const Characters = () => {\n  const [characters, setCharacters] = useState(null);\n  const [currentCharacter, setCurrentCharacter] = useState(null);\n\n  useEffect(() => {\n    api\n      .getCharactersList()\n      .then((data) => {\n        setCharacters(data.results);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  const handleOnClick = (id) => {\n    api\n      .getCharacterById(id)\n      .then((data) => {\n        setCurrentCharacter(data.result);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  return (\n    <>\n      <h2 className=\"episode-select\">Characters</h2>\n      {currentCharacter && currentCharacter?.properties && (\n        <DetailedCard\n          currentCardItem={currentCharacter?.properties}\n          type={DetailedCardEnum.CHARACTERS}\n        />\n      )}\n      <article className=\"characters\">\n        {characters\n          ? characters.map((character) => {\n              return (\n                <Card\n                  key={character.uid}\n                  type={CardsEnum.CHARACTERS}\n                  card={{\n                    id: character.uid,\n                    description: character.name\n                  }}\n                  onClick={handleOnClick}\n                />\n              );\n            })\n          : 'Loading...'}\n      </article>\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nimport { Card } from '../../components/card';\nimport { DetailedCard } from '../../components/detailed-card';\nimport { api } from '../../api';\nimport { CardsEnum, DetailedCardEnum } from '../../constants';\n\nimport './planets.css';\n\nexport const Planets = () => {\n  const [planets, setPlanets] = useState(null);\n  const [currentPlanet, setCurrentPlanet] = useState(null);\n\n  useEffect(() => {\n    api\n      .getPlanetList()\n      .then((data) => {\n        setPlanets(data.results);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  const handleOnClick = (id) => {\n    api\n      .getPlanetById(id)\n      .then((data) => {\n        setCurrentPlanet(data.result);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  return (\n    <>\n      <h2 className=\"episode-select\">Planets</h2>\n      {currentPlanet && currentPlanet?.properties && (\n        <DetailedCard\n          currentCardItem={currentPlanet?.properties}\n          type={DetailedCardEnum.PLANETS}\n        />\n      )}\n      <article className=\"planets\">\n        {planets\n          ? planets.map((planet) => {\n              return (\n                <Card\n                  key={planet.uid}\n                  type={CardsEnum.CHARACTERS}\n                  card={{\n                    id: planet.uid,\n                    description: planet.name\n                  }}\n                  onClick={handleOnClick}\n                />\n              );\n            })\n          : 'Loading...'}\n      </article>\n    </>\n  );\n};\n","import './starship-card.css';\n\nconst Paragraph = ({ label, value }) => {\n  return (\n    <p className=\"starship-paragraph\">\n      <span className=\"starship-description\">{label}:</span>\n      <span className=\"starship-card\">{value}</span>\n    </p>\n  );\n};\n\nexport const StarshipCard = ({ card }) => {\n  const starshipCards = [\n    { label: 'Class', value: card.starship_class },\n    { label: 'Manufacturer', value: card.manufacturer },\n    { label: 'Cost In Credits', value: card.cost_in_credits },\n    { label: 'Crew', value: card.crew },\n    { label: 'Passengers', value: card.passengers },\n    { label: 'Max Atmosphering Speed', value: card.max_atmosphering_speed },\n    { label: 'Hyperdrive Rating', value: card.hyperdrive_rating },\n    { label: 'MGLT', value: card.MGLT },\n    { label: 'Cargo Capacity', value: card.cargo_capacity },\n    { label: 'Consumables', value: card.consumables }\n  ];\n\n  return (\n    <>\n      <h2 className=\"starship-card-header\">About {card.name}</h2>\n      <div className=\"starship-card-container\">\n        {starshipCards.map((starshipCard) => (\n          <Paragraph label={starshipCard.label} value={starshipCard.value} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nimport { Card } from '../../components/card';\nimport { StarshipCard } from '../../components/starship-card';\nimport { api } from '../../api';\nimport { CardsEnum } from '../../constants';\n\nimport './starship.css';\n\nexport const Starship = () => {\n  const [starship, setStarship] = useState(null);\n  const [currentStarship, setCurrentStarship] = useState(null);\n\n  useEffect(() => {\n    api\n      .getStarshipList()\n      .then((data) => {\n        setStarship(data.results);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  const handleOnClick = (id) => {\n    api\n      .getStarshipById(id)\n      .then((data) => {\n        setCurrentStarship(data.result);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  return (\n    <>\n      <h2 className=\"episode-select\">Starship</h2>\n      {currentStarship && <StarshipCard card={currentStarship.properties} />}\n      <article className=\"starship\">\n        {starship\n          ? starship.map((character) => {\n              return (\n                <Card\n                  key={character.uid}\n                  type={CardsEnum.CHARACTERS}\n                  card={{\n                    id: character.uid,\n                    description: character.name\n                  }}\n                  onClick={handleOnClick}\n                />\n              );\n            })\n          : 'Loading...'}\n      </article>\n    </>\n  );\n};\n","import { createContext } from 'react';\nimport { TabsEnum } from '../constants';\n\nexport const CurrentTabContext = createContext({\n  currentTab: TabsEnum.EPISODES,\n  setCurrentTab: () => {}\n});\n","import React, { useContext } from 'react';\nimport { TabsEnum } from '../../constants';\nimport { CurrentTabContext } from '../../contexts';\n\nimport './menu.css';\n\nexport const Menu = () => {\n  const links = [\n    { name: 'About episodes', tab: TabsEnum.EPISODES },\n    { name: 'Characters', tab: TabsEnum.CHARACTERS },\n    { name: 'Starship', tab: TabsEnum.STARSHIP },\n    { name: 'Planets', tab: TabsEnum.PLANETS }\n  ];\n\n  // eslint-disable-next-line no-unused-vars\n  const { currentTab, setCurrentTab } = useContext(CurrentTabContext);\n\n  const handleLinkClick = (e) => {\n    e.preventDefault();\n    setCurrentTab(e.target.id);\n  };\n\n  return (\n    <ul className=\"menu-nav\">\n      {links.map((link, index) => (\n        <li key={`${index}${link.tab}`}>\n          <a className=\"menu-link\" href=\".\" onClick={handleLinkClick} id={link.tab}>\n            {link.name}\n          </a>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/star-wars.5fa9c771.svg\";","import React from 'react';\nimport logo from './../../assets/images/icons/star-wars.svg';\n\nimport './logo.css';\n\nexport const Logo = () => {\n  return (\n    <a href=\".\">\n      <img\n        className=\"menu-header-logo\"\n        src={logo}\n        alt=\"Star wars logo\"\n        width=\"135\"\n        height=\"58\"\n      />\n    </a>\n  );\n};\n","import React from 'react';\nimport { Menu } from '../menu';\nimport { Logo } from '../logo';\n\nimport './header.css';\n\nexport const Header = () => {\n  return (\n    <header>\n      <nav className=\"nav\">\n        <Logo />\n        <Menu />\n      </nav>\n    </header>\n  );\n};\n","import React, { useState } from 'react';\nimport { Episodes } from './pages/episodes';\nimport { Characters } from './pages/characters';\nimport { Planets } from './pages/planets';\nimport { Starship } from './pages/starship';\nimport { Header } from './components/header';\nimport { CurrentTabContext } from './contexts';\nimport { TabsEnum } from './constants';\n\nexport const App = () => {\n  const [currentTab, setCurrentTab] = useState(TabsEnum.EPISODES);\n  const value = { currentTab, setCurrentTab };\n\n  return (\n    <CurrentTabContext.Provider value={value}>\n      <div className=\"container\">\n        <Header />\n        {currentTab === TabsEnum.EPISODES && <Episodes />}\n        {currentTab === TabsEnum.CHARACTERS && <Characters />}\n        {currentTab === TabsEnum.STARSHIP && <Starship />}\n        {currentTab === TabsEnum.PLANETS && <Planets />}\n      </div>\n    </CurrentTabContext.Provider>\n  );\n};\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}