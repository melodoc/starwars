{"version":3,"sources":["assets/images/background sync /^/.//.*$","assets/images/background/C-3PO.png","assets/images/background/R5-D4.webp","assets/images/background/beru.jpeg","assets/images/background/biggs.jpeg","assets/images/background/darth-vader.png","assets/images/background/default.png","assets/images/background/leia.png","assets/images/background/luke.png","assets/images/background/main-bg.jpg","assets/images/background/obi_wan_kenobi.png","assets/images/background/owen.jpg","assets/images/background/r2d2.png","constants/cards-enum.js","constants/detailed-card-enum.js","constants/tabs-enum.js","components/card/card.js","components/loader/loader.js","components/info-panel/info-panel.js","api/api.js","constants/request-params.js","pages/episodes/episodes.js","components/character/character.js","components/detailed-card/utils/getImgLink.js","components/detailed-card/detailed-card.js","components/detailed-card/utils/getCardItemProps.js","pages/characters/characters.js","pages/planets/planets.js","components/starship-card/starship-card.js","pages/starship/starship.js","contexts/CurrentTabContext.js","components/menu/menu.js","assets/images/icons/star-wars.svg","components/logo/logo.js","components/header/header.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","CardsEnum","DetailedCardEnum","TabsEnum","Card","type","card","onClick","releaseDate","description","title","episode","useState","detailsVisibility","setDetailsVisibility","handleOnClick","handleMouseEvent","className","dateTime","onMouseEnter","onMouseLeave","href","preventDefault","Loader","InfoPanel","currentFilm","properties","episode_id","opening_crawl","release_date","director","producer","api","baseUrl","headers","this","_methods","GET","POST","DELETE","PUT","PATCH","method","path","options","fetch","body","JSON","stringify","then","res","ok","json","Promise","reject","status","_fetchHandle","Episodes","films","setFilms","setCurrentFilm","useEffect","getFilmsList","data","result","catch","err","console","error","selectedFilm","find","film","_id","Character","character","characterPicPath","default","TableRow","label","value","DetailedCard","currentCardItem","cardItem","props","height","mass","eyeColor","eye_color","birthYear","birth_year","name","diameter","rotationPeriod","rotation_period","orbitalPeriod","orbital_period","gravity","population","climate","terrain","surfaceWater","surface_water","getCardItemProps","image","characterItemName","imageName","undefined","require","getImgLink","characters","planets","index","src","alt","Characters","setCharacters","currentCharacter","setCurrentCharacter","isLoading","setIsLoading","getCharactersList","results","getCharacterById","finally","modules","Navigation","Pagination","Scrollbar","A11y","spaceBetween","slidesPerView","navigation","pagination","clickable","onSwiper","swiper","log","onSlideChange","uid","Planets","setPlanets","currentPlanet","setCurrentPlanet","getPlanetList","getPlanetById","planet","Paragraph","StarshipCard","starshipCards","starship_class","manufacturer","cost_in_credits","crew","passengers","max_atmosphering_speed","hyperdrive_rating","MGLT","cargo_capacity","consumables","starshipCard","Starship","starship","setStarship","currentStarship","setCurrentStarship","getStarshipList","getStarshipById","CurrentTabContext","createContext","currentTab","setCurrentTab","Menu","links","tab","useContext","handleLinkClick","target","link","Logo","logo","Header","App","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0aa96307.chunk.js","sourcesContent":["var map = {\n\t\"./C-3PO.png\": 25,\n\t\"./R5-D4.webp\": 26,\n\t\"./beru.jpeg\": 27,\n\t\"./biggs.jpeg\": 28,\n\t\"./darth-vader.png\": 29,\n\t\"./default.png\": 30,\n\t\"./leia.png\": 31,\n\t\"./luke.png\": 32,\n\t\"./main-bg.jpg\": 33,\n\t\"./obi_wan_kenobi.png\": 34,\n\t\"./owen.jpg\": 35,\n\t\"./r2d2.png\": 36\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 24;","export default __webpack_public_path__ + \"static/media/C-3PO.22ccf25d.png\";","export default __webpack_public_path__ + \"static/media/R5-D4.9d6d1406.webp\";","export default __webpack_public_path__ + \"static/media/beru.974186e8.jpeg\";","export default __webpack_public_path__ + \"static/media/biggs.b9ed9120.jpeg\";","export default __webpack_public_path__ + \"static/media/darth-vader.d60b18f7.png\";","export default __webpack_public_path__ + \"static/media/default.5f1cab10.png\";","export default __webpack_public_path__ + \"static/media/leia.e87cf1ef.png\";","export default __webpack_public_path__ + \"static/media/luke.346df4e7.png\";","export default __webpack_public_path__ + \"static/media/main-bg.86e040e8.jpg\";","export default __webpack_public_path__ + \"static/media/obi_wan_kenobi.75de10a4.png\";","export default __webpack_public_path__ + \"static/media/owen.278884fa.jpg\";","export default __webpack_public_path__ + \"static/media/r2d2.3dcfc63d.png\";","export const CardsEnum = {\n  MOVIE: 'MOVIE',\n  CHARACTERS: 'CHARACTERS'\n};\n","export const DetailedCardEnum = {\n  PLANETS: 'PLANETS',\n  CHARACTERS: 'CHARACTERS'\n};\n","export const TabsEnum = {\n  EPISODES: 'EPISODES',\n  CHARACTERS: 'CHARACTERS',\n  STARSHIP: 'STARSHIP',\n  PLANETS: 'PLANETS'\n};\n","import React, { useState } from 'react';\n\nimport { CardsEnum } from '../../constants';\n\nimport './card.css';\n\nexport const Card = ({ type, card, onClick }) => {\n  const { id, releaseDate, description, title, episode } = card;\n  const [detailsVisibility, setDetailsVisibility] = useState(false);\n\n  const handleOnClick = () => {\n    onClick(id);\n  };\n\n  const handleLinkClick = (e) => {\n    e.preventDefault();\n  };\n\n  const handleMouseEvent = () => {\n    setDetailsVisibility(!detailsVisibility);\n  };\n\n  return type === CardsEnum.MOVIE ? (\n    <div className=\"card-item\" onClick={handleOnClick}>\n      <time className=\"card-year content\" dateTime={releaseDate}>\n        {releaseDate}\n      </time>\n      <p className=\"card-name content\">\n        {title}. Episode {episode}\n      </p>\n      <p className=\"card-description content\">{description}</p>\n    </div>\n  ) : (\n    <div\n      className=\"card-item card-characters\"\n      onClick={handleOnClick}\n      onMouseEnter={handleMouseEvent}\n      onMouseLeave={handleMouseEvent}\n    >\n      <time className=\"card-year content\" dateTime={releaseDate}>\n        {releaseDate}\n      </time>\n      <p className=\"card-name character content\">{description}</p>\n      {detailsVisibility && (\n        <a className=\"card-link content\" href=\".\" onClick={handleLinkClick}>\n          View details\n        </a>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './loader.css';\n\nexport const Loader = () => {\n  return (\n    <div className=\"loader__container\">\n      <div className=\"loader\"></div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './info-panel.css';\n\nexport const InfoPanel = ({ currentFilm }) => {\n  if (currentFilm) {\n    return (\n      <>\n        <section className=\"episode\">\n          <h1 className=\"episode-number\">Episode {currentFilm.properties.episode_id}</h1>\n          <h2 className=\"episode-title\">{currentFilm.properties.title}</h2>\n          <p className=\"episode-description\">{currentFilm.properties.opening_crawl}</p>\n        </section>\n        <section className=\"date\">\n          <h2 className=\"date-title\">Release date</h2>\n          <p className=\"date-description\">{currentFilm.properties.release_date}</p>\n        </section>\n        <section className=\"info\">\n          <p className=\"info-title\">Director: {currentFilm.properties.director}</p>\n          <p className=\"info-title\">Producer: {currentFilm.properties.producer}</p>\n        </section>\n        <h2 className=\"title\">See details about other episodes</h2>\n      </>\n    );\n  }\n  return <h2 className=\"episode-select\">Episodes are loading...</h2>;\n};\n","import { requestParams } from '../constants';\n\nclass Api {\n  constructor({ baseUrl, headers }) {\n    this.baseUrl = baseUrl;\n    this.headers = headers;\n    this._methods = {\n      GET: 'GET',\n      POST: 'POST',\n      DELETE: 'DELETE',\n      PUT: 'PUT',\n      PATCH: 'PATCH'\n    };\n  }\n\n  _fetchHandle(method, path, options) {\n    return fetch(`${this.baseUrl}${path}`, {\n      method,\n      headers: this.headers,\n      body: JSON.stringify(options)\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Error: ${res.status}`);\n    });\n  }\n\n  getFilmsList() {\n    return this._fetchHandle(this._methods.GET, '/films');\n  }\n\n  getCharactersList() {\n    return this._fetchHandle(this._methods.GET, '/people');\n  }\n\n  getCharacterById(id) {\n    return this._fetchHandle(this._methods.GET, `/people/${id}`);\n  }\n\n  getStarshipList() {\n    return this._fetchHandle(this._methods.GET, '/starships');\n  }\n\n  getStarshipById(id) {\n    return this._fetchHandle(this._methods.GET, `/starships/${id}`);\n  }\n\n  getPlanetList() {\n    return this._fetchHandle(this._methods.GET, '/planets');\n  }\n\n  getPlanetById(id) {\n    return this._fetchHandle(this._methods.GET, `/planets/${id}`);\n  }\n}\n\nexport const api = new Api(requestParams);\n","export const requestParams = {\n  baseUrl: 'https://www.swapi.tech/api/',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n","import React, { useEffect, useState } from 'react';\n\nimport { Card } from '../../components/card';\nimport { Loader } from '../../components/loader';\nimport { InfoPanel } from '../../components/info-panel/info-panel';\nimport { CardsEnum } from '../../constants';\nimport { api } from '../../api';\n\nimport './episodes.css';\n\nexport const Episodes = () => {\n  const [films, setFilms] = useState(null);\n  const [currentFilm, setCurrentFilm] = useState(null);\n\n  useEffect(() => {\n    api\n      .getFilmsList()\n      .then((data) => {\n        setFilms(data.result);\n        setCurrentFilm(data.result[0]);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  const handleOnClick = (id) => {\n    const selectedFilm = films.find((film) => film._id === id);\n    setCurrentFilm(selectedFilm);\n  };\n\n  return (\n    <>\n      <InfoPanel currentFilm={currentFilm} />\n      <article className=\"card\">\n        {films ? (\n          films.map((film) => {\n            return (\n              <Card\n                key={film._id}\n                type={CardsEnum.MOVIE}\n                card={{\n                  id: film._id,\n                  releaseDate: film.properties.release_date,\n                  description: film.properties.opening_crawl,\n                  title: film.properties.title,\n                  episode: film.properties.episode_id\n                }}\n                onClick={handleOnClick}\n              />\n            );\n          })\n        ) : (\n          <Loader />\n        )}\n      </article>\n    </>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './character.css';\n\nexport const Character = ({ character, onClick }) => {\n  const { id, releaseDate, description } = character;\n  const [detailsVisibility, setDetailsVisibility] = useState(false);\n\n  const handleOnClick = () => {\n    onClick(id);\n  };\n\n  const handleLinkClick = (e) => {\n    e.preventDefault();\n  };\n\n  const handleMouseEvent = () => {\n    setDetailsVisibility(!detailsVisibility);\n  };\n\n  return (\n    <div\n      className=\"card-item card-characters\"\n      onClick={handleOnClick}\n      onMouseEnter={handleMouseEvent}\n      onMouseLeave={handleMouseEvent}\n    >\n      <time className=\"card-year content\" dateTime={releaseDate}>\n        {releaseDate}\n      </time>\n      <p className=\"card-name character content\">{description}</p>\n      {detailsVisibility && (\n        <a className=\"card-link content\" href=\".\" onClick={handleLinkClick}>\n          View details\n        </a>\n      )}\n    </div>\n  );\n};\n","const characterPicPath = {\n  'Luke Skywalker': 'luke.png',\n  'C-3PO': 'C-3PO.png',\n  'R2-D2': 'r2d2.png',\n  'Darth Vader': 'darth-vader.png',\n  'Leia Organa': 'leia.png',\n  'Owen Lars': 'owen.jpg',\n  'Beru Whitesun lars': 'beru.jpeg',\n  'R5-D4': 'R5-D4.webp',\n  'Biggs Darklighter': 'biggs.jpeg',\n  'Obi-Wan Kenobi': 'obi_wan_kenobi.png',\n  default: 'default.png'\n};\n\nexport const getImgLink = (characterItemName) => {\n  const imageName =\n    characterPicPath[characterItemName] === '' ||\n    characterPicPath[characterItemName] === undefined\n      ? characterPicPath.default\n      : characterPicPath[characterItemName];\n  return require(`../../../assets/images/background/${imageName}`);\n};\n","import React from 'react';\n\nimport { DetailedCardEnum } from '../../constants';\nimport { getCardItemProps, getImgLink } from './utils';\n\nimport './detailed-card.css';\n\nconst TableRow = ({ label, value }) => {\n  return (\n    <tr className='character-row-container'>\n      <td className=\"character-row character-row-label\">{label}</td>\n      <td className=\"character-row\">{value}</td>\n    </tr>\n  );\n};\n\nexport const DetailedCard = ({ currentCardItem, type }) => {\n  const cardItem = getCardItemProps(currentCardItem, type);\n  const image = getImgLink(cardItem.name);\n\n  const characters = [\n    { label: 'Height', value: cardItem.height },\n    { label: 'Mass', value: cardItem.mass },\n    { label: 'Eye color', value: cardItem.eyeColor },\n    { label: 'Birth year', value: cardItem.birthYear }\n  ];\n\n  const planets = [\n    { label: 'Diameter', value: cardItem.diameter },\n    { label: 'Rotation period', value: cardItem.rotationPeriod },\n    { label: 'Orbital period', value: cardItem.orbitalPeriod },\n    { label: 'Gravity', value: cardItem.gravity },\n    { label: 'Population', value: cardItem.population },\n    { label: 'Climate', value: cardItem.climate },\n    { label: 'Terrain', value: cardItem.terrain },\n    { label: 'Surface water', value: cardItem.surfaceWater }\n  ];\n\n  return type === DetailedCardEnum.CHARACTERS ? (\n    <div className=\"character-card\">\n      <h2 className=\"character-card-title\">Info about {cardItem.name}</h2>\n      <div className=\"character-table-grid\">\n        <table className=\"character-table\">\n          <tbody>\n            {characters.map((character, index) => (\n              <TableRow\n                key={`table_row_characters_${index}`}\n                label={character.label}\n                value={character.value}\n              />\n            ))}\n          </tbody>\n        </table>\n        <img className=\"character-table-image\" src={image.default} alt={cardItem.name} />\n      </div>\n    </div>\n  ) : (\n    <div className=\"character-card\">\n      <h2 className=\"character-card-title\">Info about {cardItem.name}</h2>\n      <table className=\"character-table\">\n        <tbody>\n          {planets.map((character, index) => (\n            <TableRow\n              key={`table_row_planets_${index}`}\n              label={character.label}\n              value={character.value}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import { DetailedCardEnum } from '../../../constants';\n\nexport const getCardItemProps = (props, type) => {\n  return type === DetailedCardEnum.CHARACTERS\n    ? {\n        height: props.height,\n        mass: props.mass,\n        eyeColor: props.eye_color,\n        birthYear: props.birth_year,\n        name: props.name\n      }\n    : {\n        diameter: props.diameter,\n        rotationPeriod: props.rotation_period,\n        orbitalPeriod: props.orbital_period,\n        gravity: props.gravity,\n        population: props.population,\n        climate: props.climate,\n        terrain: props.terrain,\n        surfaceWater: props.surface_water,\n        name: props.name\n      };\n};\n","import React, { useEffect, useState } from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Navigation, Pagination, Scrollbar, A11y } from 'swiper';\nimport { Character } from '../../components/character';\nimport { DetailedCard } from '../../components/detailed-card';\nimport { Loader } from '../../components/loader';\nimport { api } from '../../api';\nimport { CardsEnum, DetailedCardEnum } from '../../constants';\n\nimport 'swiper/swiper-bundle.min.css';\nimport 'swiper/swiper.min.css';\nimport './characters.css';\n\nexport const Characters = () => {\n  const [characters, setCharacters] = useState(null);\n  const [currentCharacter, setCurrentCharacter] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    api\n      .getCharactersList()\n      .then((data) => {\n        setCharacters(data.results);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  const handleOnClick = (id) => {\n    setIsLoading(true);\n    api\n      .getCharacterById(id)\n      .then((data) => {\n        setCurrentCharacter(data.result);\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  return (\n    <>\n      <h2 className=\"episode-select\">Characters</h2>\n      {isLoading ? (\n        <div className=\"characters-loader\">\n          <Loader />\n        </div>\n      ) : (\n        currentCharacter &&\n        currentCharacter?.properties && (\n          <DetailedCard\n            currentCardItem={currentCharacter?.properties}\n            type={DetailedCardEnum.CHARACTERS}\n          />\n        )\n      )}\n      <article className=\"characters\">\n        {characters ? (\n          <Swiper\n            modules={[Navigation, Pagination, Scrollbar, A11y]}\n            spaceBetween={10}\n            slidesPerView={4}\n            navigation\n            pagination={{ clickable: true }}\n            onSwiper={(swiper) => console.log(swiper)}\n            onSlideChange={() => console.log('slide change')}\n          >\n            {characters.map((character) => {\n              return (\n                <SwiperSlide>\n                  <Character\n                    key={character.uid}\n                    type={CardsEnum.CHARACTERS}\n                    character={{\n                      id: character.uid,\n                      description: character.name\n                    }}\n                    onClick={handleOnClick}\n                  />\n                </SwiperSlide>\n              );\n            })}\n          </Swiper>\n        ) : (\n          <Loader />\n        )}\n      </article>\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nimport { Card } from '../../components/card';\nimport { DetailedCard } from '../../components/detailed-card';\nimport { Loader } from '../../components/loader';\nimport { api } from '../../api';\nimport { CardsEnum, DetailedCardEnum } from '../../constants';\n\nimport './planets.css';\n\nexport const Planets = () => {\n  const [planets, setPlanets] = useState(null);\n  const [currentPlanet, setCurrentPlanet] = useState(null);\n\n  useEffect(() => {\n    api\n      .getPlanetList()\n      .then((data) => {\n        setPlanets(data.results);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  const handleOnClick = (id) => {\n    api\n      .getPlanetById(id)\n      .then((data) => {\n        setCurrentPlanet(data.result);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  return (\n    <>\n      <h2 className=\"episode-select\">Planets</h2>\n      {currentPlanet && currentPlanet?.properties && (\n        <DetailedCard\n          currentCardItem={currentPlanet?.properties}\n          type={DetailedCardEnum.PLANETS}\n        />\n      )}\n      <article className=\"planets\">\n        {planets ? (\n          planets.map((planet) => {\n            return (\n              <Card\n                key={planet.uid}\n                type={CardsEnum.CHARACTERS}\n                card={{\n                  id: planet.uid,\n                  description: planet.name\n                }}\n                onClick={handleOnClick}\n              />\n            );\n          })\n        ) : (\n          <Loader />\n        )}\n      </article>\n    </>\n  );\n};\n","import './starship-card.css';\n\nconst Paragraph = ({ label, value }) => {\n  return (\n    <p className=\"starship-paragraph\">\n      <span className=\"starship-description\">{label}:</span>\n      <span className=\"starship-card\">{value}</span>\n    </p>\n  );\n};\n\nexport const StarshipCard = ({ card }) => {\n  const starshipCards = [\n    { label: 'Class', value: card.starship_class },\n    { label: 'Manufacturer', value: card.manufacturer },\n    { label: 'Cost In Credits', value: card.cost_in_credits },\n    { label: 'Crew', value: card.crew },\n    { label: 'Passengers', value: card.passengers },\n    { label: 'Max Atmosphering Speed', value: card.max_atmosphering_speed },\n    { label: 'Hyperdrive Rating', value: card.hyperdrive_rating },\n    { label: 'MGLT', value: card.MGLT },\n    { label: 'Cargo Capacity', value: card.cargo_capacity },\n    { label: 'Consumables', value: card.consumables }\n  ];\n\n  return (\n    <>\n      <h2 className=\"starship-card-header\">About {card.name}</h2>\n      <div className=\"starship-card-container\">\n        {starshipCards.map((starshipCard) => (\n          <Paragraph label={starshipCard.label} value={starshipCard.value} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nimport { Card } from '../../components/card';\nimport { StarshipCard } from '../../components/starship-card';\nimport { Loader } from '../../components/loader';\nimport { api } from '../../api';\nimport { CardsEnum } from '../../constants';\n\nimport './starship.css';\n\nexport const Starship = () => {\n  const [starship, setStarship] = useState(null);\n  const [currentStarship, setCurrentStarship] = useState(null);\n\n  useEffect(() => {\n    api\n      .getStarshipList()\n      .then((data) => {\n        setStarship(data.results);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  const handleOnClick = (id) => {\n    api\n      .getStarshipById(id)\n      .then((data) => {\n        setCurrentStarship(data.result);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  return (\n    <>\n      <h2 className=\"episode-select\">Starship</h2>\n      {currentStarship && <StarshipCard card={currentStarship.properties} />}\n      <article className=\"starship\">\n        {starship ? (\n          starship.map((character) => {\n            return (\n              <Card\n                key={character.uid}\n                type={CardsEnum.CHARACTERS}\n                card={{\n                  id: character.uid,\n                  description: character.name\n                }}\n                onClick={handleOnClick}\n              />\n            );\n          })\n        ) : (\n          <Loader />\n        )}\n      </article>\n    </>\n  );\n};\n","import { createContext } from 'react';\nimport { TabsEnum } from '../constants';\n\nexport const CurrentTabContext = createContext({\n  currentTab: TabsEnum.EPISODES,\n  setCurrentTab: () => {}\n});\n","import React, { useContext } from 'react';\nimport { TabsEnum } from '../../constants';\nimport { CurrentTabContext } from '../../contexts';\n\nimport './menu.css';\n\nexport const Menu = () => {\n  const links = [\n    { name: 'About episodes', tab: TabsEnum.EPISODES },\n    { name: 'Characters', tab: TabsEnum.CHARACTERS },\n    { name: 'Starship', tab: TabsEnum.STARSHIP },\n    { name: 'Planets', tab: TabsEnum.PLANETS }\n  ];\n\n  // eslint-disable-next-line no-unused-vars\n  const { currentTab, setCurrentTab } = useContext(CurrentTabContext);\n\n  const handleLinkClick = (e) => {\n    e.preventDefault();\n    setCurrentTab(e.target.id);\n  };\n\n  return (\n    <ul className=\"menu-nav\">\n      {links.map((link, index) => (\n        <li key={`${index}${link.tab}`}>\n          <a className=\"menu-link\" href=\".\" onClick={handleLinkClick} id={link.tab}>\n            {link.name}\n          </a>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/star-wars.5fa9c771.svg\";","import React from 'react';\nimport logo from './../../assets/images/icons/star-wars.svg';\n\nimport './logo.css';\n\nexport const Logo = () => {\n  return (\n    <a href=\".\">\n      <img\n        className=\"menu-header-logo\"\n        src={logo}\n        alt=\"Star wars logo\"\n      />\n    </a>\n  );\n};\n","import React from 'react';\nimport { Menu } from '../menu';\nimport { Logo } from '../logo';\n\nimport './header.css';\n\nexport const Header = () => {\n  return (\n    <header>\n      <nav className=\"nav\">\n        <Logo />\n        <Menu />\n      </nav>\n    </header>\n  );\n};\n","import React, { useState } from 'react';\nimport { Episodes } from './pages/episodes';\nimport { Characters } from './pages/characters';\nimport { Planets } from './pages/planets';\nimport { Starship } from './pages/starship';\nimport { Header } from './components/header';\nimport { CurrentTabContext } from './contexts';\nimport { TabsEnum } from './constants';\n\nexport const App = () => {\n  const [currentTab, setCurrentTab] = useState(TabsEnum.EPISODES);\n  const value = { currentTab, setCurrentTab };\n\n  return (\n    <CurrentTabContext.Provider value={value}>\n      <div className=\"container\">\n        <Header />\n        {currentTab === TabsEnum.EPISODES && <Episodes />}\n        {currentTab === TabsEnum.CHARACTERS && <Characters />}\n        {currentTab === TabsEnum.STARSHIP && <Starship />}\n        {currentTab === TabsEnum.PLANETS && <Planets />}\n      </div>\n    </CurrentTabContext.Provider>\n  );\n};\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}